import hancho
import glob

hancho.Config.build_tag = "debug"

deps = hancho.Config()
deps.metrolib = hancho.repo("symlinks/metrolib/build.hancho", **deps)
deps.rules    = hancho.load("rules/rules.hancho", **deps)
deps.metron   = hancho.load("metron/metron.hancho", **deps)

hancho.load("metron/metron_wasm.hancho", **deps)
hancho.load("examples/examples.hancho",  **deps)
hancho.load("test.hancho", **deps)

#---------------------------------------------------------------------------------------------------
# Bundled headers for demo & tutorial

def sorted_glob(*args, **kwargs):
    return sorted(glob.glob(*args, **kwargs))

ems_package = hancho.Config(
  desc     = "Package {rel(out_data)}",
  command  = "python3 $EMSDK/upstream/emscripten/tools/file_packager.py {out_data} {flags} --js-output={out_js} --preload {preloads} --exclude {excludes} 2> /dev/null",
  flags    = "--no-node",
  excludes = "*.cpp *.sv *.MD *.hex *.pcf *.v *.txt *.hancho",
)

examples_data = ems_package(
  preloads    = "examples tests/metron",
  in_examples = sorted_glob("examples/**/*.h"),
  in_tests    = sorted_glob("tests/metron/**/*.h"),
  out_data    = "docs/demo/examples.data",
  out_js      = "docs/demo/examples.js",
)

tutorial_data = ems_package(
  preloads    = "examples/tutorial examples/uart",
  in_tutorial = sorted_glob("examples/tutorial/*.h"),
  in_uart     = sorted_glob("examples/uart/*.h"),
  out_data    = "docs/tutorial/tutorial_src.data",
  out_js      = "docs/tutorial/tutorial_src.js",
)
