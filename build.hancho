#####

hancho.build_tag = "debug"

metrolib = hancho.repo("symlinks/metrolib/build.hancho")

rules = metrolib.rules

#task = metrolib.elf_to_hex("add.elf", ["add.code.vh", "add.rwdata.vh"])

#metron = build_config.load("metron/build.hancho")

#opts_cpp = "-rdynamic -ggdb3 -O0 -Wall -Werror -Wsuggest-override -Wno-unused-function -Wno-sign-compare -Wno-unused-variable -Wno-unused-but-set-variable -std=gnu++2a"
#opts_c = "-rdynamic -ggdb3 -O0 -Wall -Werror -Wno-unused-function -Wno-sign-compare -Wno-unused-variable -Wno-unused-but-set-variable"
#opts_ld = "-O0"
#ems_opts_cpp = "-O0 -g3 -gsource-map -std=c++20 -sNO_DISABLE_EXCEPTION_CATCHING"
#ems_opts_ld = "-sEXPORT_ES6 -sEXPORTED_RUNTIME_METHODS=['FS','callMain'] -sNO_DISABLE_EXCEPTION_CATCHING -sTOTAL_STACK=32MB -sINITIAL_MEMORY=256MB -sALLOW_MEMORY_GROWTH -sFORCE_FILESYSTEM"
#base_includes = "-I. -Isymlinks -Isymlinks/metrolib -Isymlinks/matcheroni"
#libraries = "-lgcc -lc"

metron_source = hancho.glob("metron/*.cpp") + hancho.glob("metron/nodes/*.cpp")

metron_lib = rules.cpp_lib(
  metron_source,
  "metron/libmetron.a",
  cpp_flags = ["-rdynamic", "-ggdb3"],
  includes = [".", "symlinks", "symlinks/metrolib", "symlinks/matcheroni"],
  warnings = ["all", "error", "suggest-override", "no-unused-function", "no-sign-compare", "no-unused-variable", "no-unused-but-set-variable"],
)

#rules.compile_cpp(
#  "metron/CToken.cpp",
#  cpp_flags = ["-rdynamic", "-ggdb3"],
#  includes = [".", "symlinks", "symlinks/metrolib", "symlinks/matcheroni"],
#  warnings = ["all", "error", "suggest-override", "no-unused-function", "no-sign-compare", "no-unused-variable", "no-unused-but-set-variable"],
#)
