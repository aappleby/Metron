import glob

def sorted_glob(*args, **kwargs):
    return sorted(glob.glob(*args, **kwargs))

#---------------------------------------------------------------------------------------------------

emcc = hancho.Command(
  desc = "Compile Emscripten'd {rel(in_src)}",
  command = "emcc {flags} {joined_includes} -c {rel(in_src)} -o {rel(out_obj)}",
  flags = [
    "-std=c++20",
    "-O0",
    "-g3",
    "-gsource-map",
    "-MMD",
    "-sNO_DISABLE_EXCEPTION_CATCHING",
    "-Wno-deprecated-declarations",
  ],
  includes = [
    ".",
    "{repo_dir}",
    "{repo_dir}/symlinks",
    "{repo_dir}/symlinks/metrolib",
    "{repo_dir}/symlinks/matcheroni",
    "{repo_dir}/symlinks/CLI11/include"
  ],
  out_obj = "{swap_ext(in_src, '.o')}",
  joined_includes = "{join_prefix('-I', get('includes', []))}"
)

emld = hancho.Command(
  desc = "Link Emscripten'd {rel(out_js)}",
  command = "emcc {flags} {rel(in_objs)} -o {out_js}",
  flags = [
    "-sEXPORT_ES6",
    "-sEXPORTED_RUNTIME_METHODS=['FS','callMain']",
    "-sNO_DISABLE_EXCEPTION_CATCHING",
    "-sTOTAL_STACK=32MB",
    "-sINITIAL_MEMORY=256MB",
    "-sALLOW_MEMORY_GROWTH",
    "-sFORCE_FILESYSTEM"
  ],
)

#---------------------------------------------------------------------------------------------------

metron_js_src = [
  sorted_glob("*.cpp"),
  sorted_glob("main/*.cpp"),
  sorted_glob("nodes/*.cpp"),
]

metron_objs = []

for file in hancho.flatten(metron_js_src):
  obj = hancho(emcc, in_src=file, build_tag = "wasm")
  metron_objs.append(obj)

metrolib_js_src = [
  "{repo_dir}/symlinks/metrolib/metrolib/core/Platform.cpp",
  "{repo_dir}/symlinks/metrolib/metrolib/core/Utils.cpp",
  "{repo_dir}/symlinks/metrolib/metrolib/core/Err.cpp",
]

metrolib_objs = []
for file in hancho.flatten(metrolib_js_src):
  obj = hancho(
    emcc,
    in_src=file,
    repo_name = "metrolib",
    build_tag = "wasm",
    out_obj = "{swap_ext(path.basename(in_src), '.o')}",
    build_dir = "{root_dir}/{build_root}/wasm/metrolib",
  )
  metrolib_objs.append(obj)

metron_js = hancho(
  emld,
  in_objs   = metron_objs + metrolib_objs,
  out_js    = "{repo_dir}/docs/app/metron.js",
  out_wasm  = "{repo_dir}/docs/app/metron.wasm",
  build_tag = "wasm"
)

#---------------------------------------------------------------------------------------------------
